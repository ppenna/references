@article{Castro2016,
    author    = { Castro, M{\'{a}}rcio and
                  Francesquini, Emilio and
                  Dupros, Fabrice and
                  Aochi, Hideo and
                  Navaux, Philippe O.A. and
                  M{\'{e}}haut, Jean-Fran{\c{c}}ois
    },
    doi       = { 10.1016/j.parco.2016.01.011 },
    issn      = { 01678191 },
    journal   = { Parallel Computing (PARCO) },
    keywords  = { MPPA-256,Manycore,PhD },
    month     = { may },
    pages     = { 108--120 },
    publisher = { Elsevier },
    title     = { Seismic Wave Propagation Simulations on Low-Power and Performance-Centric Manycores },
    url       = { https://linkinghub.elsevier.com/retrieve/pii/S0167819116000417 },
    volume    = { 54 },
    year      = { 2016 }
}

@techreport{Asanovic2006,
    author      = { Asanovi{\'{c}}, Krste and
                    Bodik, Ras and
                    Catanzaro, Bryan Christopher and
                    Gebis, Joseph James and
                    Husbands, Parry and
                    Keutzer, Kurt and
                    Patterson, David A and
                    Plishker, William Lester and
                    Shalf, John and
                    Williams, Samuel Webb and
                    Yelick, Katherine A
    },
    institution = {EECS Department, University of California, Berkeley},
    number      = {UCB/EECS-2006-183},
    title       = {{The Landscape of Parallel Computing Research: A View from Berkeley}},
    url         = {http://www2.eecs.berkeley.edu/Pubs/TechRpts/2006/EECS-2006-183.html},
    year        = {2006},
}

@article{Bailey1991,
    author  = { Bailey, D H and
                Barszcz, E and
                Barton, J T and
                Browning, D S and
                Carter, R L and
                Dagum, Leonardo and
                Fatoohi, R A and
                Frederickson, P O and
                Lasinski, T A and
                Schreiber, R S and
                Simon, H D and
                Venkatakrishnan, V and
                Weeratunga, S K
    },
    doi     = {10.1145/125826.125925},
    isbn    = {0-89791-459-7},
    journal = {International Conference on Supercomputing (ICS)},
    pages   = {158--165},
    title   = {{The NAS Parallel Benchmarks: Summary and Preliminary Results}},
    url     = {http://doi.acm.org/10.1145/125826.125925},
    year    = {1991}
}

@article{Barnes1986,
    abstract  = { Until recently the gravitational N-body problem has been
                  modelled numerically either by direct integration, in which
                  the computation needed increases as N 2, or by an iterative
                  potential method in which the number of operations grows as N
                  log N. Here we describe a novel method of directly calculating
                  the force on N bodies that grows only as N log N. The
                  technique uses a tree-structured hierarchical subdivision of
                  space into cubic cells, each of which is recursively divided
                  into eight subcells whenever more than one particle is found
                  to occupy the same cell. This tree is constructed anew at
                  every time step, avoiding ambiguity and tangling.  Advantages
                  over potential-solving codes are: accurate local interactions;
                  freedom from geometrical assumptions and restrictions; and
                  applicability to a wide class of systems, including
                  (proto-)planetary, stellar, galactic and cosmological ones.
                  Advantages over previous hierarchical tree-codes include
                  simplicity and the possibility of rigorous analysis of error.
                  Although we concentrate here on stellar dynamical
                  applications, our techniques of efficiently handling a large
                  number of long-range interactions and concentrating
                  computational effort where most needed have potential
                  applications in other areas of astrophysics as well.
    },
    author    = { Barnes, Josh and Hut, Piet },
    doi       = { 10.1038/324446a0 },
    issn      = { 0028-0836 },
    journal   = { Nature },
    number    = { 6096 },
    pages     = { 446--449 },
    publisher = { Nature Publishing Group },
    title     = { {A hierarchical O(N log N) force-calculation algorithm} },
    url       = { http://www.nature.com/doifinder/10.1038/324446a0 },
    volume    = { 324 },
    year      = { 1986 }
}

@article{Hashemi2012,
    author    = { Hashemi, Matin and
                  Foroozannejad, Mohammad H. and
                  Ghiasi, Soheil and
                  Etzel, Christoph and
                  Hashemi, Matin and
                  Foroozannejad, Mohammad H. and
                  Ghiasi, Soheil and
                  Etzel, Christoph
    },
    doi       = {10.1145/2345141.2248429},
    isbn      = {978-1-4503-1212-7},
    journal   = {ACM SIGPLAN Notices},
    number    = {5},
    pages     = {71--78},
    publisher = {ACM},
    title     = {{FORMLESS: scalable utilization of embedded manycores in streaming applications}},
    url       = {https://dl.acm.org/citation.cfm?id=2248429{\&}CFID=1006872733{\&}CFTOKEN=78198493},
    volume    = {47},
    year      = {2012}
}

@article{Mellor-Crummey1991,
    author    = {Mellor-Crummey, John M. and Scott, Michael L.},
    doi       = {10.1145/103727.103729},
    journal   = {ACM Transactions on Computer Systems},
    month     = {feb},
    number    = {1},
    pages     = {21--65},
    publisher = {ACM},
    title     = {{Algorithms for scalable synchronization on shared-memory multiprocessors}},
    url       = {http://portal.acm.org/citation.cfm?doid=103727.103729},
    volume    = {9},
    year      = {1991}
}

@inproceedings{Merrill2012,
    abstract   = { Breadth-first search (BFS) is a core primitive for graph
                   traversal and a basis for many higher-level graph analysis
                   algorithms. It is also representative of a class of parallel
                   computations whose memory accesses and work distribution are
                   both irregular and data-dependent. Recent work has
                   demonstrated the plausibility of GPU sparse graph traversal,
                   but has tended to focus on asymptotically inefficient
                   algorithms that perform poorly on graphs with non-trivial
                   diameter. We present a BFS parallelization focused on
                   fine-grained task management constructed from efficient
                   prefix sum that achieves an asymptotically optimal O(|V|+|E|)
                   work complexity. Our implementation delivers excellent
                   performance on diverse graphs, achieving traversal rates in
                   excess of 3.3 billion and 8.3 billion traversed edges per
                   second using single and quad-GPU configurations,
                   respectively. This level of performance is several times
                   faster than state-of-the-art implementations both CPU and GPU
                   platforms.
    },
    address    = { New York, USA },
    author     = { Merrill, Duane and
                   Garland, Michael and
                   Grimshaw, Andrew and
                   Merrill, Duane and
                   Garland, Michael and
                   Grimshaw, Andrew
    },
    booktitle  = { ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming (PPoPP ) },
    doi        = { 10.1145/2145816.2145832 },
    isbn       = { 9781450311601 },
    number     = { 8 },
    pages      = { 117 },
    publisher  = { ACM Press },
    title      = { {Scalable GPU Graph Traversal} },
    volume     = { 47 },
    year       = { 2012 }
}